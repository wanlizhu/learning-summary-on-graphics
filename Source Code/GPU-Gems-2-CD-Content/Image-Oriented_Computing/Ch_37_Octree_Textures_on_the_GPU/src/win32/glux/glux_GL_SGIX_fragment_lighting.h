
// --------------------------------------------------------
// Generated by glux perl script (Wed Mar 31 17:19:35 2004)
// 
// Sylvain Lefebvre - 2002 - Sylvain.Lefebvre@imag.fr
// --------------------------------------------------------
#include "glux_no_redefine.h"
#include "glux_ext_defs.h"
#include "gluxLoader.h"
#include "gluxPlugin.h"
// --------------------------------------------------------
//         Plugin creation
// --------------------------------------------------------

#ifndef __GLUX_GL_SGIX_fragment_lighting__
#define __GLUX_GL_SGIX_fragment_lighting__

GLUX_NEW_PLUGIN(GL_SGIX_fragment_lighting);
// --------------------------------------------------------
//           Extension conditions
// --------------------------------------------------------
// --------------------------------------------------------
//           Extension defines
// --------------------------------------------------------
#ifndef GL_FRAGMENT_LIGHTING_SGIX
#  define GL_FRAGMENT_LIGHTING_SGIX 0x8400
#endif
#ifndef GL_FRAGMENT_COLOR_MATERIAL_SGIX
#  define GL_FRAGMENT_COLOR_MATERIAL_SGIX 0x8401
#endif
#ifndef GL_FRAGMENT_COLOR_MATERIAL_FACE_SGIX
#  define GL_FRAGMENT_COLOR_MATERIAL_FACE_SGIX 0x8402
#endif
#ifndef GL_FRAGMENT_COLOR_MATERIAL_PARAMETER_SGIX
#  define GL_FRAGMENT_COLOR_MATERIAL_PARAMETER_SGIX 0x8403
#endif
#ifndef GL_MAX_FRAGMENT_LIGHTS_SGIX
#  define GL_MAX_FRAGMENT_LIGHTS_SGIX 0x8404
#endif
#ifndef GL_MAX_ACTIVE_LIGHTS_SGIX
#  define GL_MAX_ACTIVE_LIGHTS_SGIX 0x8405
#endif
#ifndef GL_CURRENT_RASTER_NORMAL_SGIX
#  define GL_CURRENT_RASTER_NORMAL_SGIX 0x8406
#endif
#ifndef GL_LIGHT_ENV_MODE_SGIX
#  define GL_LIGHT_ENV_MODE_SGIX 0x8407
#endif
#ifndef GL_FRAGMENT_LIGHT_MODEL_LOCAL_VIEWER_SGIX
#  define GL_FRAGMENT_LIGHT_MODEL_LOCAL_VIEWER_SGIX 0x8408
#endif
#ifndef GL_FRAGMENT_LIGHT_MODEL_TWO_SIDE_SGIX
#  define GL_FRAGMENT_LIGHT_MODEL_TWO_SIDE_SGIX 0x8409
#endif
#ifndef GL_FRAGMENT_LIGHT_MODEL_AMBIENT_SGIX
#  define GL_FRAGMENT_LIGHT_MODEL_AMBIENT_SGIX 0x840A
#endif
#ifndef GL_FRAGMENT_LIGHT_MODEL_NORMAL_INTERPOLATION_SGIX
#  define GL_FRAGMENT_LIGHT_MODEL_NORMAL_INTERPOLATION_SGIX 0x840B
#endif
#ifndef GL_FRAGMENT_LIGHT0_SGIX
#  define GL_FRAGMENT_LIGHT0_SGIX 0x840C
#endif
#ifndef GL_FRAGMENT_LIGHT1_SGIX
#  define GL_FRAGMENT_LIGHT1_SGIX 0x840D
#endif
#ifndef GL_FRAGMENT_LIGHT2_SGIX
#  define GL_FRAGMENT_LIGHT2_SGIX 0x840E
#endif
#ifndef GL_FRAGMENT_LIGHT3_SGIX
#  define GL_FRAGMENT_LIGHT3_SGIX 0x840F
#endif
#ifndef GL_FRAGMENT_LIGHT4_SGIX
#  define GL_FRAGMENT_LIGHT4_SGIX 0x8410
#endif
#ifndef GL_FRAGMENT_LIGHT5_SGIX
#  define GL_FRAGMENT_LIGHT5_SGIX 0x8411
#endif
#ifndef GL_FRAGMENT_LIGHT6_SGIX
#  define GL_FRAGMENT_LIGHT6_SGIX 0x8412
#endif
#ifndef GL_FRAGMENT_LIGHT7_SGIX
#  define GL_FRAGMENT_LIGHT7_SGIX 0x8413
#endif
// --------------------------------------------------------
//           Extension gl function typedefs
// --------------------------------------------------------
#ifndef __GLUX__GLFCT_glFragmentColorMaterialSGIX
typedef void (APIENTRYP PFNGLUXFRAGMENTCOLORMATERIALSGIXPROC) (GLenum face, GLenum mode);
#endif
#ifndef __GLUX__GLFCT_glFragmentLightfSGIX
typedef void (APIENTRYP PFNGLUXFRAGMENTLIGHTFSGIXPROC) (GLenum light, GLenum pname, GLfloat param);
#endif
#ifndef __GLUX__GLFCT_glFragmentLightfvSGIX
typedef void (APIENTRYP PFNGLUXFRAGMENTLIGHTFVSGIXPROC) (GLenum light, GLenum pname, const GLfloat *params);
#endif
#ifndef __GLUX__GLFCT_glFragmentLightiSGIX
typedef void (APIENTRYP PFNGLUXFRAGMENTLIGHTISGIXPROC) (GLenum light, GLenum pname, GLint param);
#endif
#ifndef __GLUX__GLFCT_glFragmentLightivSGIX
typedef void (APIENTRYP PFNGLUXFRAGMENTLIGHTIVSGIXPROC) (GLenum light, GLenum pname, const GLint *params);
#endif
#ifndef __GLUX__GLFCT_glFragmentLightModelfSGIX
typedef void (APIENTRYP PFNGLUXFRAGMENTLIGHTMODELFSGIXPROC) (GLenum pname, GLfloat param);
#endif
#ifndef __GLUX__GLFCT_glFragmentLightModelfvSGIX
typedef void (APIENTRYP PFNGLUXFRAGMENTLIGHTMODELFVSGIXPROC) (GLenum pname, const GLfloat *params);
#endif
#ifndef __GLUX__GLFCT_glFragmentLightModeliSGIX
typedef void (APIENTRYP PFNGLUXFRAGMENTLIGHTMODELISGIXPROC) (GLenum pname, GLint param);
#endif
#ifndef __GLUX__GLFCT_glFragmentLightModelivSGIX
typedef void (APIENTRYP PFNGLUXFRAGMENTLIGHTMODELIVSGIXPROC) (GLenum pname, const GLint *params);
#endif
#ifndef __GLUX__GLFCT_glFragmentMaterialfSGIX
typedef void (APIENTRYP PFNGLUXFRAGMENTMATERIALFSGIXPROC) (GLenum face, GLenum pname, GLfloat param);
#endif
#ifndef __GLUX__GLFCT_glFragmentMaterialfvSGIX
typedef void (APIENTRYP PFNGLUXFRAGMENTMATERIALFVSGIXPROC) (GLenum face, GLenum pname, const GLfloat *params);
#endif
#ifndef __GLUX__GLFCT_glFragmentMaterialiSGIX
typedef void (APIENTRYP PFNGLUXFRAGMENTMATERIALISGIXPROC) (GLenum face, GLenum pname, GLint param);
#endif
#ifndef __GLUX__GLFCT_glFragmentMaterialivSGIX
typedef void (APIENTRYP PFNGLUXFRAGMENTMATERIALIVSGIXPROC) (GLenum face, GLenum pname, const GLint *params);
#endif
#ifndef __GLUX__GLFCT_glGetFragmentLightfvSGIX
typedef void (APIENTRYP PFNGLUXGETFRAGMENTLIGHTFVSGIXPROC) (GLenum light, GLenum pname, GLfloat *params);
#endif
#ifndef __GLUX__GLFCT_glGetFragmentLightivSGIX
typedef void (APIENTRYP PFNGLUXGETFRAGMENTLIGHTIVSGIXPROC) (GLenum light, GLenum pname, GLint *params);
#endif
#ifndef __GLUX__GLFCT_glGetFragmentMaterialfvSGIX
typedef void (APIENTRYP PFNGLUXGETFRAGMENTMATERIALFVSGIXPROC) (GLenum face, GLenum pname, GLfloat *params);
#endif
#ifndef __GLUX__GLFCT_glGetFragmentMaterialivSGIX
typedef void (APIENTRYP PFNGLUXGETFRAGMENTMATERIALIVSGIXPROC) (GLenum face, GLenum pname, GLint *params);
#endif
#ifndef __GLUX__GLFCT_glLightEnviSGIX
typedef void (APIENTRYP PFNGLUXLIGHTENVISGIXPROC) (GLenum pname, GLint param);
#endif
// --------------------------------------------------------
//           Extension gl functions
// --------------------------------------------------------
namespace glux {
#ifndef __GLUX__GLFCT_glFragmentColorMaterialSGIX
extern PFNGLUXFRAGMENTCOLORMATERIALSGIXPROC glFragmentColorMaterialSGIX;
#endif
#ifndef __GLUX__GLFCT_glFragmentLightfSGIX
extern PFNGLUXFRAGMENTLIGHTFSGIXPROC glFragmentLightfSGIX;
#endif
#ifndef __GLUX__GLFCT_glFragmentLightfvSGIX
extern PFNGLUXFRAGMENTLIGHTFVSGIXPROC glFragmentLightfvSGIX;
#endif
#ifndef __GLUX__GLFCT_glFragmentLightiSGIX
extern PFNGLUXFRAGMENTLIGHTISGIXPROC glFragmentLightiSGIX;
#endif
#ifndef __GLUX__GLFCT_glFragmentLightivSGIX
extern PFNGLUXFRAGMENTLIGHTIVSGIXPROC glFragmentLightivSGIX;
#endif
#ifndef __GLUX__GLFCT_glFragmentLightModelfSGIX
extern PFNGLUXFRAGMENTLIGHTMODELFSGIXPROC glFragmentLightModelfSGIX;
#endif
#ifndef __GLUX__GLFCT_glFragmentLightModelfvSGIX
extern PFNGLUXFRAGMENTLIGHTMODELFVSGIXPROC glFragmentLightModelfvSGIX;
#endif
#ifndef __GLUX__GLFCT_glFragmentLightModeliSGIX
extern PFNGLUXFRAGMENTLIGHTMODELISGIXPROC glFragmentLightModeliSGIX;
#endif
#ifndef __GLUX__GLFCT_glFragmentLightModelivSGIX
extern PFNGLUXFRAGMENTLIGHTMODELIVSGIXPROC glFragmentLightModelivSGIX;
#endif
#ifndef __GLUX__GLFCT_glFragmentMaterialfSGIX
extern PFNGLUXFRAGMENTMATERIALFSGIXPROC glFragmentMaterialfSGIX;
#endif
#ifndef __GLUX__GLFCT_glFragmentMaterialfvSGIX
extern PFNGLUXFRAGMENTMATERIALFVSGIXPROC glFragmentMaterialfvSGIX;
#endif
#ifndef __GLUX__GLFCT_glFragmentMaterialiSGIX
extern PFNGLUXFRAGMENTMATERIALISGIXPROC glFragmentMaterialiSGIX;
#endif
#ifndef __GLUX__GLFCT_glFragmentMaterialivSGIX
extern PFNGLUXFRAGMENTMATERIALIVSGIXPROC glFragmentMaterialivSGIX;
#endif
#ifndef __GLUX__GLFCT_glGetFragmentLightfvSGIX
extern PFNGLUXGETFRAGMENTLIGHTFVSGIXPROC glGetFragmentLightfvSGIX;
#endif
#ifndef __GLUX__GLFCT_glGetFragmentLightivSGIX
extern PFNGLUXGETFRAGMENTLIGHTIVSGIXPROC glGetFragmentLightivSGIX;
#endif
#ifndef __GLUX__GLFCT_glGetFragmentMaterialfvSGIX
extern PFNGLUXGETFRAGMENTMATERIALFVSGIXPROC glGetFragmentMaterialfvSGIX;
#endif
#ifndef __GLUX__GLFCT_glGetFragmentMaterialivSGIX
extern PFNGLUXGETFRAGMENTMATERIALIVSGIXPROC glGetFragmentMaterialivSGIX;
#endif
#ifndef __GLUX__GLFCT_glLightEnviSGIX
extern PFNGLUXLIGHTENVISGIXPROC glLightEnviSGIX;
#endif
} // namespace glux
// --------------------------------------------------------
#endif
// --------------------------------------------------------
