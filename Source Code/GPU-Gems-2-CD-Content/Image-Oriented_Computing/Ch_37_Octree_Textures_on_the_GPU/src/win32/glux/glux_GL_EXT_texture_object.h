
// --------------------------------------------------------
// Generated by glux perl script (Wed Mar 31 17:19:34 2004)
// 
// Sylvain Lefebvre - 2002 - Sylvain.Lefebvre@imag.fr
// --------------------------------------------------------
#include "glux_no_redefine.h"
#include "glux_ext_defs.h"
#include "gluxLoader.h"
#include "gluxPlugin.h"
// --------------------------------------------------------
//         Plugin creation
// --------------------------------------------------------

#ifndef __GLUX_GL_EXT_texture_object__
#define __GLUX_GL_EXT_texture_object__

GLUX_NEW_PLUGIN(GL_EXT_texture_object);
// --------------------------------------------------------
//           Extension conditions
// --------------------------------------------------------
// --------------------------------------------------------
//           Extension defines
// --------------------------------------------------------
#ifndef GL_TEXTURE_PRIORITY_EXT
#  define GL_TEXTURE_PRIORITY_EXT 0x8066
#endif
#ifndef GL_TEXTURE_RESIDENT_EXT
#  define GL_TEXTURE_RESIDENT_EXT 0x8067
#endif
#ifndef GL_TEXTURE_1D_BINDING_EXT
#  define GL_TEXTURE_1D_BINDING_EXT 0x8068
#endif
#ifndef GL_TEXTURE_2D_BINDING_EXT
#  define GL_TEXTURE_2D_BINDING_EXT 0x8069
#endif
#ifndef GL_TEXTURE_3D_BINDING_EXT
#  define GL_TEXTURE_3D_BINDING_EXT 0x806A
#endif
// --------------------------------------------------------
//           Extension gl function typedefs
// --------------------------------------------------------
#ifndef __GLUX__GLFCT_glAreTexturesResidentEXT
typedef GLboolean (APIENTRYP PFNGLUXARETEXTURESRESIDENTEXTPROC) (GLsizei n, const GLuint *textures, GLboolean *residences);
#endif
#ifndef __GLUX__GLFCT_glBindTextureEXT
typedef void (APIENTRYP PFNGLUXBINDTEXTUREEXTPROC) (GLenum target, GLuint texture);
#endif
#ifndef __GLUX__GLFCT_glDeleteTexturesEXT
typedef void (APIENTRYP PFNGLUXDELETETEXTURESEXTPROC) (GLsizei n, const GLuint *textures);
#endif
#ifndef __GLUX__GLFCT_glGenTexturesEXT
typedef void (APIENTRYP PFNGLUXGENTEXTURESEXTPROC) (GLsizei n, GLuint *textures);
#endif
#ifndef __GLUX__GLFCT_glIsTextureEXT
typedef GLboolean (APIENTRYP PFNGLUXISTEXTUREEXTPROC) (GLuint texture);
#endif
#ifndef __GLUX__GLFCT_glPrioritizeTexturesEXT
typedef void (APIENTRYP PFNGLUXPRIORITIZETEXTURESEXTPROC) (GLsizei n, const GLuint *textures, const GLclampf *priorities);
#endif
// --------------------------------------------------------
//           Extension gl functions
// --------------------------------------------------------
namespace glux {
#ifndef __GLUX__GLFCT_glAreTexturesResidentEXT
extern PFNGLUXARETEXTURESRESIDENTEXTPROC glAreTexturesResidentEXT;
#endif
#ifndef __GLUX__GLFCT_glBindTextureEXT
extern PFNGLUXBINDTEXTUREEXTPROC glBindTextureEXT;
#endif
#ifndef __GLUX__GLFCT_glDeleteTexturesEXT
extern PFNGLUXDELETETEXTURESEXTPROC glDeleteTexturesEXT;
#endif
#ifndef __GLUX__GLFCT_glGenTexturesEXT
extern PFNGLUXGENTEXTURESEXTPROC glGenTexturesEXT;
#endif
#ifndef __GLUX__GLFCT_glIsTextureEXT
extern PFNGLUXISTEXTUREEXTPROC glIsTextureEXT;
#endif
#ifndef __GLUX__GLFCT_glPrioritizeTexturesEXT
extern PFNGLUXPRIORITIZETEXTURESEXTPROC glPrioritizeTexturesEXT;
#endif
} // namespace glux
// --------------------------------------------------------
#endif
// --------------------------------------------------------
