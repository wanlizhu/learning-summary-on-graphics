
// --------------------------------------------------------
// Generated by glux perl script (Wed Mar 31 17:19:35 2004)
// 
// Sylvain Lefebvre - 2002 - Sylvain.Lefebvre@imag.fr
// --------------------------------------------------------
#include "glux_no_redefine.h"
#include "glux_ext_defs.h"
#include "gluxLoader.h"
#include "gluxPlugin.h"
// --------------------------------------------------------
//         Plugin creation
// --------------------------------------------------------

#ifndef __GLUX_GL_NV_register_combiners__
#define __GLUX_GL_NV_register_combiners__

GLUX_NEW_PLUGIN(GL_NV_register_combiners);
// --------------------------------------------------------
//           Extension conditions
// --------------------------------------------------------
// --------------------------------------------------------
//           Extension defines
// --------------------------------------------------------
#ifndef GL_REGISTER_COMBINERS_NV
#  define GL_REGISTER_COMBINERS_NV 0x8522
#endif
#ifndef GL_VARIABLE_A_NV
#  define GL_VARIABLE_A_NV 0x8523
#endif
#ifndef GL_VARIABLE_B_NV
#  define GL_VARIABLE_B_NV 0x8524
#endif
#ifndef GL_VARIABLE_C_NV
#  define GL_VARIABLE_C_NV 0x8525
#endif
#ifndef GL_VARIABLE_D_NV
#  define GL_VARIABLE_D_NV 0x8526
#endif
#ifndef GL_VARIABLE_E_NV
#  define GL_VARIABLE_E_NV 0x8527
#endif
#ifndef GL_VARIABLE_F_NV
#  define GL_VARIABLE_F_NV 0x8528
#endif
#ifndef GL_VARIABLE_G_NV
#  define GL_VARIABLE_G_NV 0x8529
#endif
#ifndef GL_CONSTANT_COLOR0_NV
#  define GL_CONSTANT_COLOR0_NV 0x852A
#endif
#ifndef GL_CONSTANT_COLOR1_NV
#  define GL_CONSTANT_COLOR1_NV 0x852B
#endif
#ifndef GL_PRIMARY_COLOR_NV
#  define GL_PRIMARY_COLOR_NV 0x852C
#endif
#ifndef GL_SECONDARY_COLOR_NV
#  define GL_SECONDARY_COLOR_NV 0x852D
#endif
#ifndef GL_SPARE0_NV
#  define GL_SPARE0_NV 0x852E
#endif
#ifndef GL_SPARE1_NV
#  define GL_SPARE1_NV 0x852F
#endif
#ifndef GL_DISCARD_NV
#  define GL_DISCARD_NV 0x8530
#endif
#ifndef GL_E_TIMES_F_NV
#  define GL_E_TIMES_F_NV 0x8531
#endif
#ifndef GL_SPARE0_PLUS_SECONDARY_COLOR_NV
#  define GL_SPARE0_PLUS_SECONDARY_COLOR_NV 0x8532
#endif
#ifndef GL_UNSIGNED_IDENTITY_NV
#  define GL_UNSIGNED_IDENTITY_NV 0x8536
#endif
#ifndef GL_UNSIGNED_INVERT_NV
#  define GL_UNSIGNED_INVERT_NV 0x8537
#endif
#ifndef GL_EXPAND_NORMAL_NV
#  define GL_EXPAND_NORMAL_NV 0x8538
#endif
#ifndef GL_EXPAND_NEGATE_NV
#  define GL_EXPAND_NEGATE_NV 0x8539
#endif
#ifndef GL_HALF_BIAS_NORMAL_NV
#  define GL_HALF_BIAS_NORMAL_NV 0x853A
#endif
#ifndef GL_HALF_BIAS_NEGATE_NV
#  define GL_HALF_BIAS_NEGATE_NV 0x853B
#endif
#ifndef GL_SIGNED_IDENTITY_NV
#  define GL_SIGNED_IDENTITY_NV 0x853C
#endif
#ifndef GL_SIGNED_NEGATE_NV
#  define GL_SIGNED_NEGATE_NV 0x853D
#endif
#ifndef GL_SCALE_BY_TWO_NV
#  define GL_SCALE_BY_TWO_NV 0x853E
#endif
#ifndef GL_SCALE_BY_FOUR_NV
#  define GL_SCALE_BY_FOUR_NV 0x853F
#endif
#ifndef GL_SCALE_BY_ONE_HALF_NV
#  define GL_SCALE_BY_ONE_HALF_NV 0x8540
#endif
#ifndef GL_BIAS_BY_NEGATIVE_ONE_HALF_NV
#  define GL_BIAS_BY_NEGATIVE_ONE_HALF_NV 0x8541
#endif
#ifndef GL_COMBINER_INPUT_NV
#  define GL_COMBINER_INPUT_NV 0x8542
#endif
#ifndef GL_COMBINER_MAPPING_NV
#  define GL_COMBINER_MAPPING_NV 0x8543
#endif
#ifndef GL_COMBINER_COMPONENT_USAGE_NV
#  define GL_COMBINER_COMPONENT_USAGE_NV 0x8544
#endif
#ifndef GL_COMBINER_AB_DOT_PRODUCT_NV
#  define GL_COMBINER_AB_DOT_PRODUCT_NV 0x8545
#endif
#ifndef GL_COMBINER_CD_DOT_PRODUCT_NV
#  define GL_COMBINER_CD_DOT_PRODUCT_NV 0x8546
#endif
#ifndef GL_COMBINER_MUX_SUM_NV
#  define GL_COMBINER_MUX_SUM_NV 0x8547
#endif
#ifndef GL_COMBINER_SCALE_NV
#  define GL_COMBINER_SCALE_NV 0x8548
#endif
#ifndef GL_COMBINER_BIAS_NV
#  define GL_COMBINER_BIAS_NV 0x8549
#endif
#ifndef GL_COMBINER_AB_OUTPUT_NV
#  define GL_COMBINER_AB_OUTPUT_NV 0x854A
#endif
#ifndef GL_COMBINER_CD_OUTPUT_NV
#  define GL_COMBINER_CD_OUTPUT_NV 0x854B
#endif
#ifndef GL_COMBINER_SUM_OUTPUT_NV
#  define GL_COMBINER_SUM_OUTPUT_NV 0x854C
#endif
#ifndef GL_MAX_GENERAL_COMBINERS_NV
#  define GL_MAX_GENERAL_COMBINERS_NV 0x854D
#endif
#ifndef GL_NUM_GENERAL_COMBINERS_NV
#  define GL_NUM_GENERAL_COMBINERS_NV 0x854E
#endif
#ifndef GL_COLOR_SUM_CLAMP_NV
#  define GL_COLOR_SUM_CLAMP_NV 0x854F
#endif
#ifndef GL_COMBINER0_NV
#  define GL_COMBINER0_NV 0x8550
#endif
#ifndef GL_COMBINER1_NV
#  define GL_COMBINER1_NV 0x8551
#endif
#ifndef GL_COMBINER2_NV
#  define GL_COMBINER2_NV 0x8552
#endif
#ifndef GL_COMBINER3_NV
#  define GL_COMBINER3_NV 0x8553
#endif
#ifndef GL_COMBINER4_NV
#  define GL_COMBINER4_NV 0x8554
#endif
#ifndef GL_COMBINER5_NV
#  define GL_COMBINER5_NV 0x8555
#endif
#ifndef GL_COMBINER6_NV
#  define GL_COMBINER6_NV 0x8556
#endif
#ifndef GL_COMBINER7_NV
#  define GL_COMBINER7_NV 0x8557
#endif
// --------------------------------------------------------
//           Extension gl function typedefs
// --------------------------------------------------------
#ifndef __GLUX__GLFCT_glCombinerParameterfvNV
typedef void (APIENTRYP PFNGLUXCOMBINERPARAMETERFVNVPROC) (GLenum pname, const GLfloat *params);
#endif
#ifndef __GLUX__GLFCT_glCombinerParameterfNV
typedef void (APIENTRYP PFNGLUXCOMBINERPARAMETERFNVPROC) (GLenum pname, GLfloat param);
#endif
#ifndef __GLUX__GLFCT_glCombinerParameterivNV
typedef void (APIENTRYP PFNGLUXCOMBINERPARAMETERIVNVPROC) (GLenum pname, const GLint *params);
#endif
#ifndef __GLUX__GLFCT_glCombinerParameteriNV
typedef void (APIENTRYP PFNGLUXCOMBINERPARAMETERINVPROC) (GLenum pname, GLint param);
#endif
#ifndef __GLUX__GLFCT_glCombinerInputNV
typedef void (APIENTRYP PFNGLUXCOMBINERINPUTNVPROC) (GLenum stage, GLenum portion, GLenum variable, GLenum input, GLenum mapping, GLenum componentUsage);
#endif
#ifndef __GLUX__GLFCT_glCombinerOutputNV
typedef void (APIENTRYP PFNGLUXCOMBINEROUTPUTNVPROC) (GLenum stage, GLenum portion, GLenum abOutput, GLenum cdOutput, GLenum sumOutput, GLenum scale, GLenum bias, GLboolean abDotProduct, GLboolean cdDotProduct, GLboolean muxSum);
#endif
#ifndef __GLUX__GLFCT_glFinalCombinerInputNV
typedef void (APIENTRYP PFNGLUXFINALCOMBINERINPUTNVPROC) (GLenum variable, GLenum input, GLenum mapping, GLenum componentUsage);
#endif
#ifndef __GLUX__GLFCT_glGetCombinerInputParameterfvNV
typedef void (APIENTRYP PFNGLUXGETCOMBINERINPUTPARAMETERFVNVPROC) (GLenum stage, GLenum portion, GLenum variable, GLenum pname, GLfloat *params);
#endif
#ifndef __GLUX__GLFCT_glGetCombinerInputParameterivNV
typedef void (APIENTRYP PFNGLUXGETCOMBINERINPUTPARAMETERIVNVPROC) (GLenum stage, GLenum portion, GLenum variable, GLenum pname, GLint *params);
#endif
#ifndef __GLUX__GLFCT_glGetCombinerOutputParameterfvNV
typedef void (APIENTRYP PFNGLUXGETCOMBINEROUTPUTPARAMETERFVNVPROC) (GLenum stage, GLenum portion, GLenum pname, GLfloat *params);
#endif
#ifndef __GLUX__GLFCT_glGetCombinerOutputParameterivNV
typedef void (APIENTRYP PFNGLUXGETCOMBINEROUTPUTPARAMETERIVNVPROC) (GLenum stage, GLenum portion, GLenum pname, GLint *params);
#endif
#ifndef __GLUX__GLFCT_glGetFinalCombinerInputParameterfvNV
typedef void (APIENTRYP PFNGLUXGETFINALCOMBINERINPUTPARAMETERFVNVPROC) (GLenum variable, GLenum pname, GLfloat *params);
#endif
#ifndef __GLUX__GLFCT_glGetFinalCombinerInputParameterivNV
typedef void (APIENTRYP PFNGLUXGETFINALCOMBINERINPUTPARAMETERIVNVPROC) (GLenum variable, GLenum pname, GLint *params);
#endif
// --------------------------------------------------------
//           Extension gl functions
// --------------------------------------------------------
namespace glux {
#ifndef __GLUX__GLFCT_glCombinerParameterfvNV
extern PFNGLUXCOMBINERPARAMETERFVNVPROC glCombinerParameterfvNV;
#endif
#ifndef __GLUX__GLFCT_glCombinerParameterfNV
extern PFNGLUXCOMBINERPARAMETERFNVPROC glCombinerParameterfNV;
#endif
#ifndef __GLUX__GLFCT_glCombinerParameterivNV
extern PFNGLUXCOMBINERPARAMETERIVNVPROC glCombinerParameterivNV;
#endif
#ifndef __GLUX__GLFCT_glCombinerParameteriNV
extern PFNGLUXCOMBINERPARAMETERINVPROC glCombinerParameteriNV;
#endif
#ifndef __GLUX__GLFCT_glCombinerInputNV
extern PFNGLUXCOMBINERINPUTNVPROC glCombinerInputNV;
#endif
#ifndef __GLUX__GLFCT_glCombinerOutputNV
extern PFNGLUXCOMBINEROUTPUTNVPROC glCombinerOutputNV;
#endif
#ifndef __GLUX__GLFCT_glFinalCombinerInputNV
extern PFNGLUXFINALCOMBINERINPUTNVPROC glFinalCombinerInputNV;
#endif
#ifndef __GLUX__GLFCT_glGetCombinerInputParameterfvNV
extern PFNGLUXGETCOMBINERINPUTPARAMETERFVNVPROC glGetCombinerInputParameterfvNV;
#endif
#ifndef __GLUX__GLFCT_glGetCombinerInputParameterivNV
extern PFNGLUXGETCOMBINERINPUTPARAMETERIVNVPROC glGetCombinerInputParameterivNV;
#endif
#ifndef __GLUX__GLFCT_glGetCombinerOutputParameterfvNV
extern PFNGLUXGETCOMBINEROUTPUTPARAMETERFVNVPROC glGetCombinerOutputParameterfvNV;
#endif
#ifndef __GLUX__GLFCT_glGetCombinerOutputParameterivNV
extern PFNGLUXGETCOMBINEROUTPUTPARAMETERIVNVPROC glGetCombinerOutputParameterivNV;
#endif
#ifndef __GLUX__GLFCT_glGetFinalCombinerInputParameterfvNV
extern PFNGLUXGETFINALCOMBINERINPUTPARAMETERFVNVPROC glGetFinalCombinerInputParameterfvNV;
#endif
#ifndef __GLUX__GLFCT_glGetFinalCombinerInputParameterivNV
extern PFNGLUXGETFINALCOMBINERINPUTPARAMETERIVNVPROC glGetFinalCombinerInputParameterivNV;
#endif
} // namespace glux
// --------------------------------------------------------
#endif
// --------------------------------------------------------
