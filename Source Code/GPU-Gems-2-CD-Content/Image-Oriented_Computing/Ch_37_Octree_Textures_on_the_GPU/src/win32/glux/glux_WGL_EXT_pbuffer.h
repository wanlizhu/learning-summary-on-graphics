// --------------------------------------------------------
#ifdef WIN32

// --------------------------------------------------------
// Generated by glux perl script (Wed Mar 31 17:19:35 2004)
// 
// Sylvain Lefebvre - 2002 - Sylvain.Lefebvre@imag.fr
// --------------------------------------------------------
#include "glux_no_redefine.h"
#include "glux_ext_defs.h"
#include "gluxLoader.h"
#include "gluxPlugin.h"
// --------------------------------------------------------
//         Plugin creation
// --------------------------------------------------------

#ifndef __GLUX_WGL_EXT_pbuffer__
#define __GLUX_WGL_EXT_pbuffer__

GLUX_NEW_PLUGIN(WGL_EXT_pbuffer);
// --------------------------------------------------------
//           Extension conditions
// --------------------------------------------------------
// --------------------------------------------------------
//           Extension defines
// --------------------------------------------------------
#ifndef WGL_DRAW_TO_PBUFFER_EXT
#  define WGL_DRAW_TO_PBUFFER_EXT 0x202D
#endif
#ifndef WGL_MAX_PBUFFER_PIXELS_EXT
#  define WGL_MAX_PBUFFER_PIXELS_EXT 0x202E
#endif
#ifndef WGL_MAX_PBUFFER_WIDTH_EXT
#  define WGL_MAX_PBUFFER_WIDTH_EXT 0x202F
#endif
#ifndef WGL_MAX_PBUFFER_HEIGHT_EXT
#  define WGL_MAX_PBUFFER_HEIGHT_EXT 0x2030
#endif
#ifndef WGL_OPTIMAL_PBUFFER_WIDTH_EXT
#  define WGL_OPTIMAL_PBUFFER_WIDTH_EXT 0x2031
#endif
#ifndef WGL_OPTIMAL_PBUFFER_HEIGHT_EXT
#  define WGL_OPTIMAL_PBUFFER_HEIGHT_EXT 0x2032
#endif
#ifndef WGL_PBUFFER_LARGEST_EXT
#  define WGL_PBUFFER_LARGEST_EXT 0x2033
#endif
#ifndef WGL_PBUFFER_WIDTH_EXT
#  define WGL_PBUFFER_WIDTH_EXT 0x2034
#endif
#ifndef WGL_PBUFFER_HEIGHT_EXT
#  define WGL_PBUFFER_HEIGHT_EXT 0x2035
#endif
// --------------------------------------------------------
//           Extension gl function typedefs
// --------------------------------------------------------
#ifndef __GLUX__GLFCT_wglCreatePbufferEXT
typedef HPBUFFEREXT (APIENTRYP PFNWGLUXCREATEPBUFFEREXTPROC) (HDC hDC, int iPixelFormat, int iWidth, int iHeight, const int *piAttribList);
#endif
#ifndef __GLUX__GLFCT_wglGetPbufferDCEXT
typedef HDC (APIENTRYP PFNWGLUXGETPBUFFERDCEXTPROC) (HPBUFFEREXT hPbuffer);
#endif
#ifndef __GLUX__GLFCT_wglReleasePbufferDCEXT
typedef int (APIENTRYP PFNWGLUXRELEASEPBUFFERDCEXTPROC) (HPBUFFEREXT hPbuffer, HDC hDC);
#endif
#ifndef __GLUX__GLFCT_wglDestroyPbufferEXT
typedef BOOL (APIENTRYP PFNWGLUXDESTROYPBUFFEREXTPROC) (HPBUFFEREXT hPbuffer);
#endif
#ifndef __GLUX__GLFCT_wglQueryPbufferEXT
typedef BOOL (APIENTRYP PFNWGLUXQUERYPBUFFEREXTPROC) (HPBUFFEREXT hPbuffer, int iAttribute, int *piValue);
#endif
// --------------------------------------------------------
//           Extension gl functions
// --------------------------------------------------------
namespace glux {
#ifndef __GLUX__GLFCT_wglCreatePbufferEXT
extern PFNWGLUXCREATEPBUFFEREXTPROC wglCreatePbufferEXT;
#endif
#ifndef __GLUX__GLFCT_wglGetPbufferDCEXT
extern PFNWGLUXGETPBUFFERDCEXTPROC wglGetPbufferDCEXT;
#endif
#ifndef __GLUX__GLFCT_wglReleasePbufferDCEXT
extern PFNWGLUXRELEASEPBUFFERDCEXTPROC wglReleasePbufferDCEXT;
#endif
#ifndef __GLUX__GLFCT_wglDestroyPbufferEXT
extern PFNWGLUXDESTROYPBUFFEREXTPROC wglDestroyPbufferEXT;
#endif
#ifndef __GLUX__GLFCT_wglQueryPbufferEXT
extern PFNWGLUXQUERYPBUFFEREXTPROC wglQueryPbufferEXT;
#endif
} // namespace glux
// --------------------------------------------------------
#endif
// --------------------------------------------------------
#endif
// --------------------------------------------------------
